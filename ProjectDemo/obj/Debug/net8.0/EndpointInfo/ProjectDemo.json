{
  "openapi": "3.0.1",
  "info": {
    "title": "Selling Electronic API",
    "description": "API for retrieving Selling electronic data",
    "version": "V1"
  },
  "paths": {
    "/api/Category": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get all category",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Add Category",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Category/{id}": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get category by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Category"
        ],
        "summary": "Update category by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CategoryModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "summary": "Delete catory by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Product": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "List all products.",
        "description": "In default, value of sortBy is null.If you want to sort, you can enter value for \"sortBy\" parameter.",
        "parameters": [
          {
            "name": "sortBy",
            "in": "query",
            "description": "sortBy: price_desc/price_asc/name_desc/null(default)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Add new product.",
        "description": "mainImg used for show image product in the card product of list product(mainImg is link img)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Product/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get products by id.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Update product",
        "description": "server find prouduct by id(input) and update the product. mainImg used for show image product in the card product of list product(mainImg is link img)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Delete product.",
        "description": "Server find product and delete.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Product/Count": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Count products.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Product/Page": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "List all products by page.",
        "description": "Enter pageIndex, pageSize, sortBy.In default, value of sortBy is null.If you want to sort, you can enter value for \"sortBy\" parameter.",
        "parameters": [
          {
            "name": "pageIndex",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "sortBy: price_desc/price_asc/name_desc/null(default)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Product/Search": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Search product by nameProduct",
        "parameters": [
          {
            "name": "nameProduct",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CategoryModel": {
        "type": "object",
        "properties": {
          "categoryName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductModel": {
        "type": "object",
        "properties": {
          "categoryId": {
            "type": "integer",
            "format": "int32"
          },
          "nameProduct": {
            "type": "string",
            "nullable": true
          },
          "colorProduct": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      }
    }
  }
}